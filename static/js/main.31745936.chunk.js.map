{"version":3,"sources":["components/utils/Loader.module.css","redux/actions.js","redux/tableReducer.js","components/Navbar.jsx","components/Table/columns.js","components/Table/TableFilter.jsx","components/Form/AddRowForm.jsx","components/Table/Menu.jsx","components/Table/Checkbox.jsx","components/Table/CartList.jsx","components/Table/BasicTable.jsx","components/utils/Loader.jsx","components/Table/TableContainer.jsx","redux/appReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GET_DATA","ADD_ROW","SHOW_SEARCH_FIELD","SHOW_FORM","SHOW_LOADER","HIDE_LOADER","getTableDataAC","data","type","payload","initState","table","tableReducer","state","action","id","Date","now","toString","firstName","lastName","email","phone","address","streetAddress","street","city","zip","description","connect","fetchData","isBigData","url","dispatch","a","fetch","json","response","useState","search","addRow","setState","useDispatch","useEffect","isShow","onClickHandler","e","target","name","className","onClick","disabled","GROUPED_COLUMNS","Header","accessor","columns","TableFilter","filter","setFilter","value","onChange","AddRowForm","formik","useFormik","initialValues","onSubmit","values","resetForm","validate","errors","Object","keys","forEach","k","err","handleSubmit","htmlFor","handleChange","pattern","placeholder","isValid","dirty","Menu","isSearchField","useSelector","app","isForm","Checkbox","React","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","CartList","selectedFlatRows","map","row","original","BasicTable","tableData","useMemo","tableInstance","useTable","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","push","getToggleAllRowsSelectedProps","Cell","console","log","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","gotoPage","pageCount","setPageSize","prepareRow","pageOptions","setGlobalFilter","globalFilter","pageSize","pageIndex","headerGroup","getFooterGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","length","defaultValue","pageNumber","Number","style","width","Loader","s","ldsSpinner","loader","appReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31745936.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsSpinner\":\"Loader_ldsSpinner__1VqHj\"};","export const GET_DATA = 'GET_DATA';\r\nexport const ADD_ROW = 'ADD_ROW';\r\nexport const SHOW_SEARCH_FIELD = 'SHOW_SEARCH_FIELD';\r\nexport const SHOW_FORM = 'SHOW_FORM';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const HIDE_LOADER = 'HIDE_LOADER';\r\n\r\n\r\nexport const getTableDataAC = (data) => ({\r\n  type: GET_DATA,\r\n  payload: data\r\n})\r\n\r\nexport const showSearchFieldAC = (isShow) => ({\r\n  type: SHOW_SEARCH_FIELD,\r\n  payload: isShow\r\n})\r\n\r\nexport const showFormAC = (isShow) => ({\r\n  type: SHOW_FORM,\r\n  payload: isShow\r\n})\r\n\r\nexport const addRowAC = (row) => ({\r\n  type: ADD_ROW,\r\n  payload: row\r\n})\r\n\r\nexport const showLoaderAC = () => ({\r\n  type: SHOW_LOADER\r\n})\r\n\r\nexport const hideLoaderAC = () => ({\r\n  type: HIDE_LOADER\r\n})","import { GET_DATA, ADD_ROW } from './actions';\r\nimport { getTableDataAC, showLoaderAC, hideLoaderAC } from './actions';\r\n\r\nconst initState = {\r\n  table: [],\r\n};\r\n\r\nconst tableReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return {\r\n        ...state,\r\n        table: action.payload,\r\n      };\r\n    case ADD_ROW:\r\n      return {\r\n        ...state,\r\n        table: [\r\n          {\r\n            id: Date.now().toString(),\r\n            firstName: action.payload.firstName,\r\n            lastName: action.payload.lastName,\r\n            email: action.payload.email,\r\n            phone: action.payload.phone,\r\n            address: {\r\n              streetAddress: action.payload.street,\r\n              city: action.payload.city,\r\n              state: action.payload.state,\r\n              zip: action.payload.zip,\r\n            },\r\n            description: action.payload.description,\r\n          },\r\n          ...state.table,\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunk\r\nexport const fetchData = (isBigData) => {\r\n  let url = null;\r\n  if (isBigData) {\r\n    url =\r\n      'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n  } else {\r\n    url =\r\n      'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n  }\r\n\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(showLoaderAC());\r\n      const data = await fetch(url);\r\n\r\n      const response = await data.json();\r\n      dispatch(getTableDataAC(response));\r\n      dispatch(hideLoaderAC());\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport default tableReducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showSearchFieldAC, showFormAC } from '../redux/actions';\r\nimport { fetchData } from '../redux/tableReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Navbar({ fetchData }) {\r\n  const [state, setState] = useState({\r\n    search: false,\r\n    addRow: false,\r\n    isBigData: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(showSearchFieldAC(state.search));\r\n  }, [state.search]);\r\n  useEffect(() => {\r\n    dispatch(showFormAC(state.addRow));\r\n  }, [state.addRow]);\r\n  useEffect(() => {\r\n    fetchData(state.isBigData);\r\n  }, [state.isBigData]);\r\n\r\n  const onClickHandler = (e) => {\r\n    setState({\r\n      [e.target.name]: !state[e.target.name],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <nav className='navbar'>\r\n      <div className='nav-center'>\r\n        <h3>React Table</h3>\r\n\r\n        <div>\r\n         \r\n          <button\r\n            type='button'\r\n            name='search'\r\n            className='nav-btn'\r\n            onClick={onClickHandler}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type='button'\r\n            name='addRow'\r\n            className='nav-btn'\r\n            onClick={onClickHandler}\r\n          >\r\n            Add Row\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type='button'\r\n            name='isBigData'\r\n            className='nav-btn'\r\n            onClick={onClickHandler}\r\n            disabled={state.isBigData}\r\n          >\r\n            Large\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type='button'\r\n            name='isBigData'\r\n            className='nav-btn'\r\n            onClick={onClickHandler}\r\n            disabled={!state.isBigData}\r\n          >\r\n            Small\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default connect(null, { fetchData })(Navbar);\r\n","export const COLUMNS = [\r\n  {\r\n    Header: 'Id',\r\n    accessor: 'id',\r\n  },\r\n  {\r\n    Header: 'First Name',\r\n    accessor: 'firstName',\r\n  },\r\n  {\r\n    Header: 'Last Name',\r\n    accessor: 'lastName',\r\n  },\r\n  {\r\n    Header: 'Email',\r\n    accessor: 'email',\r\n  },\r\n  {\r\n    Header: 'Phone',\r\n    accessor: 'phone',\r\n  },\r\n];\r\n\r\nexport const GROUPED_COLUMNS = [\r\n  {\r\n    Header: 'Id',\r\n    accessor: 'id',\r\n  },\r\n  {\r\n    Header: 'Name',\r\n    columns: [\r\n      {\r\n        Header: 'First Name',\r\n        accessor: 'firstName',\r\n      },\r\n      {\r\n        Header: 'Last Name',\r\n        accessor: 'lastName',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    Header: 'Contacts',\r\n    columns: [\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n      },\r\n      {\r\n        Header: 'Phone',\r\n        accessor: 'phone',\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    Header: 'Address',\r\n    columns: [\r\n      {\r\n      Header: 'Street',\r\n      accessor: 'address.streetAddress'\r\n    },\r\n    {\r\n      Header: 'City',\r\n      accessor: 'address.city'\r\n    },\r\n    {\r\n      Header: 'State',\r\n      accessor: 'address.state'\r\n    },\r\n    {\r\n      Header: 'Zip',\r\n      accessor: 'address.zip'\r\n    },\r\n\r\n  ],\r\n  },\r\n  {\r\n    Header: 'Description',\r\n   accessor: 'description'\r\n  },\r\n];\r\n","import React from 'react'\r\n\r\n const TableFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      Search:\r\n       <input type=\"text\" className=\"size-input\" \r\n       value={filter || ''}\r\n       onChange={e => setFilter(e.target.value)}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableFilter;\r\n","import React from 'react';\r\nimport '../Table/table.css';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addRowAC } from '../../redux/actions';\r\n\r\n\r\nconst AddRowForm = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\nconst formik = useFormik({\r\n  initialValues: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n    description: ''\r\n  },\r\n  onSubmit: (values) => {\r\n    dispatch(addRowAC(values))\r\n    formik.resetForm()\r\n  },\r\n  validate: (values) => {\r\nlet errors = {}\r\n\r\nObject.keys(values).forEach(k => {\r\n  if (!values[k]) {\r\n    errors.err = 'Error'\r\n  }\r\n})\r\n\r\nreturn errors;\r\n  }\r\n})\r\n\r\n// console.log('VAIDATE', formik.errors)\r\n\r\n  return (\r\n    <div className='table-wrapper'>\r\n\r\n<form id=\"my_form\" onSubmit={formik.handleSubmit}>\r\n\r\n      <table className='addrowForm'>\r\n      <tbody>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Contacts</th>\r\n          <th>Address</th>\r\n          <th>Description</th>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div>\r\n              <label htmlFor='firstName'>First Name: </label>\r\n              <input type='text' name='firstName'  onChange={formik.handleChange} value={formik.values.firstName}/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='secondName'>Last Name: </label>\r\n              <input type='text' name='lastName'  onChange={formik.handleChange} value={formik.values.lastName}/>\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div>\r\n              <label htmlFor='email'>Email: </label>\r\n              <input type='email' name='email'  onChange={formik.handleChange} value={formik.values.email}/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='phone'>Phone: </label>\r\n              <input type='tel'  pattern=\"^[0-9-+\\s()]*$\" placeholder=\"(123)123-1234\"\r\n              name='phone' onChange={formik.handleChange} value={formik.values.phone}/>\r\n            </div>\r\n          </td>\r\n          <td>\r\n          <div>\r\n              <label htmlFor='street'>Street: </label>\r\n              <input type='text' name='street' onChange={formik.handleChange} value={formik.values.street}/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='city'>City: </label>\r\n              <input type='text' name='city' onChange={formik.handleChange} value={formik.values.city}/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='state'>State: </label>\r\n              <input type='text' name='state' onChange={formik.handleChange} value={formik.values.state}/>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='zip'>Zip: </label>\r\n              <input type='text' pattern=\"[0-9]{3}[0-9]{3}\"\r\n              name='zip' onChange={formik.handleChange} value={formik.values.zip}/>\r\n            </div>\r\n          </td>\r\n          <td>\r\n          <label htmlFor='description'>Description: </label>\r\n              <textarea name='description' onChange={formik.handleChange} value={formik.values.description}/>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <button type=\"submit\" disabled={!(formik.isValid && formik.dirty)}>SEND</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRowForm;\r\n","import React from 'react';\r\nimport TableFilter from './TableFilter';\r\nimport { useSelector } from 'react-redux';\r\nimport AddRowForm from '../Form/AddRowForm';\r\n\r\n const Menu = ({ filter, setFilter }) => {\r\n\r\n  const isSearchField = useSelector((state) => state.app.isSearchField);\r\n  const isForm = useSelector((state) => state.app.isForm);\r\n\r\n  return (\r\n    <div>\r\n      { isSearchField\r\n      ? <TableFilter filter={filter} setFilter={setFilter}/>\r\n      : null\r\n      }\r\n      {isForm\r\n      ? <AddRowForm />\r\n      : null\r\n      }\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\n\r\nconst Checkbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Checkbox\r\n","import React from 'react';\r\n\r\nconst CartList = ({ selectedFlatRows }) => {\r\n  return (\r\n    <div>\r\n      <div className='selectedRowList'>\r\n        {selectedFlatRows.map((row) => (\r\n          <div className='selectedRow'>\r\n            <ul>\r\n              <li>\r\n                Выбран пользователь:{' '}\r\n                <b>\r\n                  {row.original.firstName} {row.original.lastName}\r\n                </b>\r\n              </li>\r\n              <li>\r\n                {' '}\r\n                Описание:\r\n                <textarea value={row.original.description}></textarea>\r\n              </li>\r\n              <li>\r\n                Адрес проживания: <b>{row.original.address.streetAddress}</b>\r\n              </li>\r\n              <li>\r\n                Город: <b>{row.original.address.city}</b>\r\n              </li>\r\n              <li>\r\n                Провинция/штат: <b>{row.original.address.state}</b>\r\n              </li>\r\n              <li>\r\n                {' '}\r\n                Индекс: <b>{row.original.address.zip}</b>{' '}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartList;\r\n","import React, { useMemo } from 'react';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useRowSelect,\r\n} from 'react-table';\r\nimport { GROUPED_COLUMNS } from './columns';\r\nimport './table.css';\r\nimport Menu from './Menu';\r\nimport Checkbox from './Checkbox';\r\nimport CartList from './CartList';\r\n\r\nconst BasicTable = ({ tableData }) => {\r\n  const columns = useMemo(() => GROUPED_COLUMNS, []);\r\n  const data = useMemo(() => tableData, [tableData]);\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }) => {\r\n              console.log('ROW', row);\r\n\r\n              return <Checkbox {...row.getToggleRowSelectedProps()} />;\r\n            },\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    pageOptions,\r\n    state,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n  } = tableInstance;\r\n  const { globalFilter, pageSize, pageIndex } = state;\r\n \r\n  return (\r\n    <>\r\n      <Menu filter={globalFilter} setFilter={setGlobalFilter} />\r\n\r\n      <div className='table-wrapper'>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getFooterGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* PAGINATION */}\r\n        <div className='centerPosition'>\r\n          <span>\r\n            Page:{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>\r\n            <span>{'| |'}</span>\r\n          </span>\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </button>\r\n\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            Previous\r\n          </button>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {'>>'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className='centerPosition'>\r\n          Go to Page:\r\n          <input\r\n            type='number'\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: '50px' }}\r\n          />\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => setPageSize(Number(e.target.value))}\r\n          >\r\n            {[5, 10, 25, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Selected ROW */}\r\n      <CartList selectedFlatRows={selectedFlatRows}/>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicTable;\r\n","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div className={s.ldsSpinner}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from 'react';\r\nimport BasicTable from './BasicTable';\r\nimport Loader from '../utils/Loader';\r\nimport { connect } from 'react-redux';\r\n\r\nconst TableContainer = ({ tableData, loader }) => {\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <div className='centerPosition'>\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <BasicTable tableData={tableData} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => ({\r\n  loader: state.app.loader,\r\n  tableData: state.tableData.table,\r\n});\r\n\r\nexport default connect(mapState, null)(TableContainer);\r\n","import { SHOW_SEARCH_FIELD, SHOW_FORM, SHOW_LOADER, HIDE_LOADER } from './actions';\r\n\r\nconst initState = {\r\n  isSearchField: false,\r\n  loader: false,\r\n  isForm: false\r\n}\r\n\r\nconst appReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\ncase SHOW_SEARCH_FIELD:\r\n  return {\r\n    ...state,\r\n    isSearchField: action.payload\r\n  };\r\n  case SHOW_FORM:\r\n  return {\r\n    ...state,\r\n    isForm: action.payload\r\n  };\r\n  case SHOW_LOADER:\r\n  return {\r\n    ...state,\r\n    loader: true\r\n  };\r\n  case HIDE_LOADER:\r\n  return {\r\n    ...state,\r\n    loader: false\r\n  };\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\r\nimport tableReducer from './tableReducer';\r\nimport appReducer from './appReducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  tableData: tableReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk),));\r\n\r\nexport default store;","import './App.css';\nimport Navbar from './components/Navbar';\nimport TableContainer from './components/Table/TableContainer';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <>\n     <Provider store={store}>\n     <Navbar />\n      <h3>Table 1</h3>\n      <TableContainer />\n     </Provider>\n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}